---
# tasks file for ansible-role-duplicati

- name: "Include OS-specific variables"
  include_vars: "{{ ansible_os_family }}.yaml"

- name: "Install python-apt, if not already installed (Debian)"
  ansible.builtin.package:
    name: "python-apt"
    state: present
  when: ansible_facts['os_family'] == 'Debian'

- name: "Gather the package facts"
  ansible.builtin.package_facts:
    manager: auto
  when: ansible_facts['packages'] is not defined

# Instructions from https://duplicati.readthedocs.io/en/latest/02-installation/#prerequisites

- name: "Import Package Signing key (RHEL)"
  ansible.builtin.rpm_key:
    key: "http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x{{ package_key }}"
    state: present
  when: ansible_facts['os_family'] == 'RedHat'

- name: "Import Package Signing key (Debian)"
  ansible.builtin.apt_key:
    keyserver: keyserver.ubuntu.com
    id: "{{ package_key }}"
    state: present
  when: ansible_facts['os_family'] == 'Debian'

- name: "Add Mono Repository into sources list (RHEL)"
  ansible.builtin.yum_repository:
    name: mono-official-stable
    description: Mono Official (stable) repo
    baseurl: "http://download.mono-project.com/repo/centos{{ ansible_distribution_major_version }}-stable.repo"
    file: mono-official-stable
    mode: 0640
    state: present
  when: ansible_facts['os_family'] == 'RedHat'

- name: "Add Mono Repository into sources list (Debian)"
  ansible.builtin.apt_repository:
    repo: "deb https://download.mono-project.com/repo/ubuntu stable-{{ ansible_distribution_release }} main"
    filename: mono-official-stable
    mode: 0640
    state: present
  when: ansible_facts['os_family'] == 'Debian'

- name: "Install required packages, if not already installed"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items: "{{ packages }}"
  when: item|string not in ansible_facts.packages

- name: "Create software directory under root homedir, if it does not exist"
  ansible.builtin.file:
    path: "/root/software/duplicati/"
    state: directory

- name: "Check if installer package already exist"
  ansible.builtin.stat:
    path: "/root/software/duplicati/{{ package_name }}"
  register: package

- name: "Download installer package from local repository"
  ansible.builtin.get_url:
    url: "{{ software_url }}/{{ package_name }}"
    dest: "/root/software/duplicati/"
    mode: 0774
  when: package.stat.exists != True

- name: "Install package (RHEL - yum)"
  ansible.builtin.yum:
    name: "/root/software/duplicati/{{ package_name }}"
    state: present
  register: installed
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - ansible_facts['distribution_major_version'] <= '7'
    - '"duplicati" not in ansible_facts.packages'

- name: "Install package (RHEL - dnf)"
  ansible.builtin.dnf:
    name: "/root/software/duplicati/{{ package_name }}"
    state: present
  register: installed
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - ansible_facts['distribution_major_version'] >= '8'
    - '"duplicati" not in ansible_facts.packages'

- name: "Install package (Debian)"
  ansible.builtin.apt:
    deb: "/root/software/duplicati/{{ package_name }}"
    state: present
  register: installed
  when:
    - ansible_facts['os_family'] == 'Debian'
    - '"duplicati" not in ansible_facts.packages'

- name: "Check for configuration file to import"
  ansible.builtin.stat:
    path: "configs/{{ ansible_hostname }}-duplicati-config.json"
  delegate_to: localhost
  register: config_file

- name: "Copy configuration file to /tmp"
  ansible.builtin.copy:
    src: "configs/{{ ansible_hostname }}-duplicati-config.json"
    dest: "/tmp/{{ ansible_hostname }}-duplicati-config.json"
    owner: root
    group: root
    mode: 0640
  when: config_file.stat.exists == True

- name: "Import existing configuration file"
  ansible.builtin.shell: ConfigurationImporter.exe /tmp/{{ ansible_hostname }}-duplicati-config.json --import-metadata=true --server-datafolder=/root/.config/Duplicati/
  args:
    chdir: /usr/lib/duplicati/
    executable: mono
  when: config_file.stat.exists == True

- name: "Delete configuration file from /tmp"
  ansible.builtin.file:
    path: "/tmp/{{ ansible_hostname }}-duplicati-config.json"
  when: config_file.stat.exists == True

- name: "Start application daemon"
  ansible.builtin.service:
    name: "duplicati.service"
    enabled: yes
    state: started
  when:
    - installed is defined
    - installed.changed
